#coord_trans(y = "log10") +
scale_fill_brewer(palette = "Dark2", name = "Segmentation Tool") +
#ylim(0,1000) +
labs(x = "", y = "# of total mRNA molecules per cell") + # Customize axis labels
theme_minimal() # Remove x-axis elements
ggsave(filename = "/results/density_qc.pdf",
plot = plot,
width = 5,
height = 10,
dpi = 300)
incongruent_meds <- ddply(combined_meta, .(tool), summarise, med = median(incongruous_genes_pct))
# plot comparison between total counts detected
plot <- ggplot(combined_meta, aes(x = factor(1), y = log2(incongruous_genes_pct+1), fill = tool)) +
geom_split_violin(alpha = .4) +
geom_boxplot(width = .2,
alpha = .6,
fatten = NULL,
show.legend = F) +
stat_summary(fun = "median",
show.legend = F,
position = position_dodge(.2)) +
#coord_trans(y = "log10") +
scale_fill_brewer(palette = "Dark2", name = "Segmentation Tool") +
#ylim(0,1000) +
labs(x = "", y = "% of incongruent genes per cell [log2]") + # Customize axis labels
theme_minimal() # Remove x-axis elements
plot
ggsave(filename = "/results/incongruent_qc.pdf",
plot = plot,
width = 5,
height = 10,
dpi = 300)
#TODO plot avg.coorelation split up by cluster
# plot comparison between total counts detected
plot <- ggplot(combined_meta,
aes(x = flat_CDM_class_name,
y = flat_CDM_cluster_avg_correlation,
fill = tool)) +
geom_split_violin(alpha = .4) +
geom_boxplot(width = .2,
alpha = .6,
fatten = NULL,
show.legend = F) +
stat_summary(fun = "median",
show.legend = F,
position = position_dodge(.2)) +
#coord_trans(y = "log10") +
scale_fill_brewer(palette = "Dark2", name = "Segmentation Tool") +
labs(x = "", y = "# of total mRNA molecules per cell") + # Customize axis labels
theme_minimal() + # Remove x-axis elements
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(filename = "/results/correlation_by_class_qc.pdf",
plot = plot,
width = 20,
height = 8,
dpi = 300)
# subset dataset to two subclasses
vol_comp_1 <- combined_meta %>%
filter(flat_CDM_subclass_name %in% c("046 Vip Gaba","022 L5 ET CTX Glut"))
plot1 <- ggplot(vol_comp_1,
aes(x = tool,
y = volume,
fill = flat_CDM_subclass_name)) +
geom_split_violin(alpha = .4) +
geom_boxplot(width = .2,
alpha = .6,
fatten = NULL,
show.legend = F) +
stat_summary(fun = "median",
show.legend = F,
position = position_dodge(.2)) +
#coord_trans(y = "log10") +
scale_fill_brewer(palette = "Dark2", name = "Subclass") +
labs(x = "", y = "cell volume") + # Customize axis labels
theme_minimal() + # Remove x-axis elements
theme(axis.text.x = element_text(angle = 45, hjust = 1))
vol_comp_1 <- combined_meta %>%
filter(flat_CDM_subclass_name %in% c("046 Vip Gaba","058 PAL-STR Gaba-Chol"))
plot2 <- ggplot(vol_comp_1,
aes(x = tool,
y = volume,
fill = flat_CDM_subclass_name)) +
geom_split_violin(alpha = .4) +
geom_boxplot(width = .2,
alpha = .6,
fatten = NULL,
show.legend = F) +
stat_summary(fun = "median",
show.legend = F,
position = position_dodge(.2)) +
#coord_trans(y = "log10") +
scale_fill_brewer(palette = "Dark2", name = "Subclass") +
labs(x = "", y = "cell volume") + # Customize axis labels
theme_minimal() + # Remove x-axis elements
theme(axis.text.x = element_text(angle = 45, hjust = 1))
vol_comp_1 <- combined_meta %>%
filter(flat_CDM_subclass_name %in% c("046 Vip Gaba","215 SNc-VTA-RAmb Foxa1 Dopa"))
plot3 <- ggplot(vol_comp_1,
aes(x = tool,
y = volume,
fill = flat_CDM_subclass_name)) +
geom_split_violin(alpha = .4) +
geom_boxplot(width = .2,
alpha = .6,
fatten = NULL,
show.legend = F) +
stat_summary(fun = "median",
show.legend = F,
position = position_dodge(.2)) +
#coord_trans(y = "log10") +
scale_fill_brewer(palette = "Dark2", name = "Subclass") +
labs(x = "", y = "cell volume") + # Customize axis labels
theme_minimal() + # Remove x-axis elements
theme(axis.text.x = element_text(angle = 45, hjust = 1))
combined_plots <- plot_grid(plot1, plot2, plot3, nrow = 1)
ggsave(filename = "/results/small_vs_large_1_qc.pdf",
plot = combined_plots,
width = 12,
height = 7,
dpi = 300)
vol_comp_1 <- combined_meta %>%
filter(flat_CDM_subclass_name %in% c("046 Vip Gaba","047 Sncg Gaba"))
plot <- ggplot(vol_comp_1,
aes(x = tool,
y = volume,
fill = flat_CDM_subclass_name)) +
geom_split_violin(alpha = .4) +
geom_boxplot(width = .2,
alpha = .6,
fatten = NULL,
show.legend = F) +
stat_summary(fun = "median",
show.legend = F,
position = position_dodge(.2)) +
#coord_trans(y = "log10") +
scale_fill_brewer(palette = "Dark2", name = "Subclass") +
labs(x = "", y = "cell volume") + # Customize axis labels
theme_minimal() + # Remove x-axis elements
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# look at volume distribution
ggsave(filename = "/results/random_cortical_cell_types_qc.pdf",
plot = plot,
width = 12,
height = 7,
dpi = 300)
cluster_names <- sort(unique(metadata_sis$flat_CDM_subclass_name))
cluster_names <- as.character(cluster_names)
# look at distribution within subclass 047
vol_comp_1 <- combined_meta %>%
filter(flat_CDM_subclass_name == cluster_names[8])
plot <- ggplot(vol_comp_1,
aes(x = flat_CDM_supertype_name,
y = volume,
fill = flat_CDM_supertype_name)) +
geom_violin(alpha = .4) +
geom_boxplot(width = .2,
alpha = .6,
fatten = NULL,
show.legend = F) +
stat_summary(fun = "median",
show.legend = F) +
#coord_trans(y = "log10") +
ggtitle(cluster_names[8]) +
scale_fill_manual(values=supertype_color_palette) +
facet_wrap(~tool) +
labs(x = "", y = "cell volume") + # Customize axis labels
theme_minimal() + # Remove x-axis elements
theme(axis.text.x = element_text(angle = 45, hjust = 1))
fixed_name <-  gsub("/", "-", cluster_names[8])
# look at volume distribution
ggsave(filename = paste0("/results/volume_",fixed_name,".pdf"),
plot = plot,
width = 12,
height = 7,
dpi = 300)
subclass_name <- cluster_names[25]
vol_comp_1 <- combined_meta %>%
filter(flat_CDM_subclass_name == subclass_name)
plot <- ggplot(vol_comp_1,
aes(x = flat_CDM_supertype_name,
y = volume,
fill = flat_CDM_supertype_name)) +
geom_violin(alpha = .4) +
geom_boxplot(width = .2,
alpha = .6,
fatten = NULL,
show.legend = F) +
stat_summary(fun = "median",
show.legend = F) +
#coord_trans(y = "log10") +
ggtitle(subclass_name) +
scale_fill_manual(values=supertype_color_palette) +
facet_wrap(~tool) +
labs(x = "", y = "cell volume") + # Customize axis labels
theme_minimal() + # Remove x-axis elements
theme(axis.text.x = element_text(angle = 45, hjust = 1))
fixed_name <-  gsub("/", "-", subclass_name)
# look at volume distribution
ggsave(filename = paste0("/results/volume_",fixed_name,".pdf"),
plot = plot,
width = 12,
height = 7,
dpi = 300)
subclass_name <- cluster_names[69]
vol_comp_1 <- combined_meta %>%
filter(flat_CDM_subclass_name == subclass_name)
plot <- ggplot(vol_comp_1,
aes(x = flat_CDM_supertype_name,
y = volume,
fill = flat_CDM_supertype_name)) +
geom_violin(alpha = .4) +
geom_boxplot(width = .2,
alpha = .6,
fatten = NULL,
show.legend = F) +
stat_summary(fun = "median",
show.legend = F) +
#coord_trans(y = "log10") +
ggtitle(subclass_name) +
scale_fill_manual(values=supertype_color_palette) +
facet_wrap(~tool) +
labs(x = "", y = "cell volume") + # Customize axis labels
theme_minimal() + # Remove x-axis elements
theme(axis.text.x = element_text(angle = 45, hjust = 1))
fixed_name <-  gsub("/", "-", subclass_name)
# look at volume distribution
ggsave(filename = paste0("/results/volume_",fixed_name,".pdf"),
plot = plot,
width = 12,
height = 7,
dpi = 300)
# plot number of cells per section for sis or vpt
summary_data <- combined_meta %>%
group_by(section, tool) %>%
dplyr::summarise(count = n()) %>%
ungroup()
# Create the bar graph
plot <- ggplot(summary_data,
aes(x = fct_rev(section),
y = count,
fill = tool)) +
geom_bar(stat = "identity", position = position_dodge2()) +
labs(title = "Number of cells per section",
x = "Section",
y = "# of high quality cells") +
scale_fill_brewer(palette = "Dark2", name = "Segmentation Tool") +
theme_minimal() + # Remove x-axis elements
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(filename = "/results/cell_per_section.pdf",
plot = plot,
width = 12,
height = 5,
dpi = 300)
summary_data_sis <- combined_meta %>%
filter(tool == "SIS") %>%
group_by(flat_CDM_subclass_name) %>%
dplyr::summarise(count = n()) %>%
ungroup()
# make pie chart
plot <- ggplot(summary_data_sis, aes(x = "", y = count, fill = flat_CDM_subclass_name)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
scale_fill_manual(values = subclass_color_palette) +
labs(title = "SIS Segmentation",
x = NULL,
y = NULL) +
theme_void() +
theme(legend.position = "none")
ggsave(filename = "/results/subclass_distribution_sis.pdf",
plot = plot,
width = 6,
height = 6,
dpi = 300)
# plot distribution for VPT
summary_data_vpt <- combined_meta %>%
filter(tool == "VPT") %>%
group_by(flat_CDM_subclass_name) %>%
dplyr::summarise(count = n()) %>%
ungroup()
plot <- ggplot(summary_data_vpt, aes(x = "", y = count, fill = flat_CDM_subclass_name)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
scale_fill_manual(values = subclass_color_palette) +
labs(title = "VPT Segmentation",
x = NULL,
y = NULL) +
theme_void() +
theme(legend.position = "none")
ggsave(filename = "/results/subclass_distribution_vpt.pdf",
plot = plot,
width = 6,
height = 6,
dpi = 300)
# merge and calculate ratio
subclass_merge <- merge(summary_data_sis,
summary_data_vpt,
by = "flat_CDM_subclass_name")
subclass_merge$subclass_merge_ratio <- subclass_merge$count.x/subclass_merge$count.y
subclass_merge$absolute_change <- subclass_merge$count.x - subclass_merge$count.y
suppressPackageStartupMessages({
library(dplyr)
library(tibble)
library(tidyr)
library(cowplot)
library(stringr)
library(ggplot2)
library(grid)
library(gridExtra)
library(data.table)
library(rearrr)
library(reticulate)
library(anndata)
})
options(stringsAsFactors = FALSE)
options(scipen=9999)
options(mc.cores=20)
# read in old segmentation
vpt <- read_h5ad("/data/merscope_638850_mouseadult_processed_VPT/whole_dataset/mouse_638850_filtered.h5ad")
suppressPackageStartupMessages({
library(dplyr)
library(tibble)
library(tidyr)
library(cowplot)
library(stringr)
library(ggplot2)
library(grid)
library(gridExtra)
library(data.table)
library(rearrr)
library(reticulate)
library(anndata)
library(ttr)
library(devtools)
library(RColorBrewer)
library(googlesheets4)
library(plyr)
library(ggrastr)
library(forcats)
library(scrattch.vis)
})
options(stringsAsFactors = FALSE)
options(scipen=9999)
options(mc.cores=30)
suppressPackageStartupMessages({
library(dplyr)
library(tibble)
library(tidyr)
library(cowplot)
library(stringr)
library(ggplot2)
library(grid)
library(gridExtra)
library(data.table)
library(rearrr)
library(reticulate)
library(anndata)
})
options(stringsAsFactors = FALSE)
options(scipen=9999)
options(mc.cores=20)
# read in old segmentation
#vpt <- read_h5ad("/data/merscope_638850_mouseadult_processed_VPT/whole_dataset/mouse_638850_filtered.h5ad")
#metadata_vpt <- vpt$obs
#save(metadata_vpt, file = "/scratch/metadata_vpt.rda")
load("/scratch/metadata_vpt.rda")
# read in new segmentation
sis <- read_h5ad("/data/merscope_638850_mouseadult_processed_SIS/")
coordinates_sis <- as.data.frame(coordinates_sis)
# read in new segmentation
sis <- read_h5ad("/data/merscope_638850_mouseadult_processed_SIS/")
suppressPackageStartupMessages({
library(anndata)
library(scrattch.vis)
library(dplyr)
library(tibble)
library(tidyr)
library(ttr)
})
# select marker genes:
# exict:Slc17a7,Slc17a6,Nrn1,
# inhib:Slc32a1,Gad2,
# olig:Sox10,Mog
# astro:Aqp4,Gfap,Glis3,
# immune:Arhgap15,Ctss
# vasc: Igf2,Tbx3
marker_genes <- c("Slc17a7","Slc17a6","Nrn1","Slc32a1","Gad2","Sox10","Mog","Aqp4","Gfap","Glis3","Arhgap15","Ctss","Igf2","Tbx3")
# load anndata file for vpt segmentaiton
vpt <- read_h5ad("/data/merscope_638850_mouseadult_processed_VPT/whole_dataset/mouse_638850_filtered.h5ad")
# extract metadata and keep only cell type assignment
metadata_vpt <- vpt$obs
filtered_metadata_vpt <- metadata_vpt %>%
filter(final_filter == FALSE) %>%
select(CDM_cluster_name,
CDM_supertype_name,
CDM_subclass_name,
CDM_class_name)
# extract count matrix and convert to data frame
data <- vpt$X
data <- as.data.frame(data)
# remove unnecessay datasets to save space
rm(vpt)
rm(metadata_vpt)
# Extract row names from metadata
row_names_to_keep <- rownames(filtered_metadata_vpt)
# Subset count matrix to high quality cells
subset_data <- data[row_names_to_keep, ]
# Subset count martrix to marker genes
marker_genes_data <- subset_data %>%
select(all_of(marker_genes))
# Combine datasets
vpt_data_combined <- merge(filtered_metadata_vpt,
marker_genes_data,
by = 0)
vpt_data_combined$Row.names <- NULL
# Convert from wide to long format using column indices
plot_data_vpt <- vpt_data_combined %>%
pivot_longer(
cols = 5:18,           # Specify the columns to pivot by their indices
names_to = "gene",    # Name of the new key column
values_to = "expression"   # Name of the new value column
)
plot_data_vpt$tool <- "VPT"
rm(vpt_data_combined)
# load anndata file for vpt segmentaiton
sis <- read_h5ad("/data/merscope_638850_mouseadult_processed_SIS/whole_dataset/mouse_638850_filtered.h5ad")
# extract metadata and keep only cell type assignment
metadata_sis <- sis$obs
filtered_metadata_sis <- metadata_sis %>%
filter(final_filter == FALSE) %>%
select(CDM_cluster_name,
CDM_supertype_name,
CDM_subclass_name,
CDM_class_name)
# extract count matrix and convert to data frame
data <- sis$X
data <- as.data.frame(data)
# remove unnecessay datasets to save space
rm(sis)
rm(metadata_sis)
# Extract row names from metadata
row_names_to_keep <- rownames(filtered_metadata_sis)
# Subset count matrix to high quality cells
subset_data <- data[row_names_to_keep, ]
# Subset count martrix to marker genes
marker_genes_data <- subset_data %>%
select(all_of(marker_genes))
# Combine datasets
sis_data_combined <- merge(filtered_metadata_sis,
marker_genes_data,
by = 0)
sis_data_combined$Row.names <- NULL
# Convert from wide to long format using column indices
plot_data_sis <- sis_data_combined %>%
pivot_longer(
cols = 5:18,           # Specify the columns to pivot by their indices
names_to = "gene",    # Name of the new key column
values_to = "expression"   # Name of the new value column
)
plot_data_vpt$tool <- "SIS"
# merge datasets
list_of_dfs <- list(plot_data_vpt, plot_data_sis)
plot_data <- rbindlist(list_of_dfs)
library(data.table)
plot_data <- rbindlist(list_of_dfs)
View(plot_data_vpt)
View(plot_data_sis)
plot_data_vpt$tool <- "SIS"
plot_data_vpt$tool <- "VPT"
plot_data_sis$tool <- "SIS"
# merge datasets
list_of_dfs <- list(plot_data_vpt, plot_data_sis)
plot_data <- rbindlist(list_of_dfs)
View(plot_data)
ggplot(plot_data,
aes(x = CDM_class_name,
y = expression,
fill = tool)) +
geom_split_violin(alpha = .4) +
geom_boxplot(width = .2,
alpha = .6,
fatten = NULL,
show.legend = F) +
stat_summary(fun = "median",
show.legend = F,
position = position_dodge(.2)) +
#coord_trans(y = "log10") +
scale_fill_brewer(palette = "Dark2", name = "Segmentation Tool") +
facet_grid(gene ~ .)
ggplot(plot_data,
aes(x = CDM_class_name,
y = expression,
fill = tool)) +
geom_split_violin(alpha = .4) +
# geom_boxplot(width = .2,
#              alpha = .6,
#              fatten = NULL,
#              show.legend = F) +
stat_summary(fun = "median",
show.legend = F,
position = position_dodge(.2)) +
#coord_trans(y = "log10") +
scale_fill_brewer(palette = "Dark2", name = "Segmentation Tool") +
facet_grid(gene ~ .) +
labs(x = "", y = "# of total mRNA molecules per cell") + # Customize axis labels
theme_minimal() + # Remove x-axis elements
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(scrattch.vis)
options(stringsAsFactors = FALSE)
options(scipen=9999)
options(mc.cores=30)
anno <- tasic_2016_anno
library(tasic2016data)
